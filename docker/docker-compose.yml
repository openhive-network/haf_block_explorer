name: 'haf-be'
services:
  haf:
    image: ${HAF_REGISTRY:-registry.gitlab.syncad.com/hive/haf/instance}:${HAF_VERSION:-7bb7aab4}
    entrypoint: /home/haf_admin/docker_entrypoint.sh
    command: $${HAF_COMMAND}
    environment:
      HIVED_UID:
      HAF_COMMAND:
      DATADIR: /home/hived/datadir
      SHM_DIR: /home/hived/shm_dir
      PG_ACCESS: "
        host    haf_block_log    hafbe_user    all    trust\n
        host    haf_block_log    haf_admin        all    trust\n
        host    postgres         haf_admin        all    trust\n
        host    haf_block_log    pghero           all    trust\n
        host    postgres         pghero           all    trust\n
        host    haf_block_log    hafbe_owner      all    trust\n
        "
    volumes:
      - haf_datadir:/home/hived/datadir
      - haf_shmdir:/home/hived/shm_dir
      - ./blockchain:/home/hived/datadir/blockchain
      - ./scripts/haf-healthcheck.sh:/home/hived/healthcheck.sh
    networks:
      haf-network:
    healthcheck:
      test: ["CMD-SHELL","/home/hived/healthcheck.sh"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 48h #time for replay to finish
  app-setup:
    image: ${BACKEND_REGISTRY:-registry.gitlab.syncad.com/hive/haf_block_explorer}:${BACKEND_VERSION:-latest}
    working_dir: /home/haf_admin/haf_block_explorer
    entrypoint: 
      - "/bin/bash"
      - "-c"
      - "./scripts/install_app.sh $${APP_SETUP_OPTIONS}"
    user: $SETUP_UID
    environment:
      POSTGRES_HOST: haf
      APP_SETUP_OPTIONS: --only-apps
    volumes:
      - ../submodules/hafah:/home/haf_admin/haf_block_explorer/submodules/hafah
      - ../submodules/btracker:/home/haf_admin/haf_block_explorer/submodules/btracker
      - ../submodules/reptracker:/home/haf_admin/haf_block_explorer/submodules/reptracker
      - ../scripts/generate_version_sql.sh:/home/haf_admin/haf_block_explorer/scripts/generate_version_sql.sh
      - ../.git:/home/haf_admin/haf_block_explorer/.git
    networks:
      haf-network:
    depends_on:
      haf:
        condition: service_healthy
  backend-setup:
    image: ${BACKEND_REGISTRY:-registry.gitlab.syncad.com/hive/haf_block_explorer}:${BACKEND_VERSION:-latest}
    command: install_app ${SETUP_OPTIONS:-}
    environment:
      POSTGRES_HOST: haf
      SETUP_OPTIONS:
    networks:
      haf-network:
    depends_on:
      app-setup:
        condition: service_completed_successfully
  backend-block-processing:
    image: ${BACKEND_REGISTRY:-registry.gitlab.syncad.com/hive/haf_block_explorer}:${BACKEND_VERSION:-latest}
    command: "process_blocks"
    environment:
      BLOCK_NUMBER: 0
      POSTGRES_HOST: haf
      POSTGRES_USER: hafbe_owner
    volumes:
      - ./scripts/block-processing-healthcheck.sh:/home/haf_admin/haf_block_explorer/block-processing-healthcheck.sh
    networks:
      haf-network:
    healthcheck:
      test: ["CMD-SHELL","/home/haf_admin/haf_block_explorer/block-processing-healthcheck.sh"]
      interval: 60s
      timeout: 5s
      retries: 20
      start_period: 72h #time for sync to finish
    depends_on:
      backend-setup:
        condition: service_completed_successfully
  backend-postgrest:
    image: ${POSTGREST_REGISTRY:-postgrest/postgrest}:${POSTGREST_VERSION:-latest}
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      PGRST_ADMIN_SERVER_PORT: 3001
      PGRST_DB_URI: postgresql://hafbe_owner@haf:5432/haf_block_log
      PGRST_DB_SCHEMA: hafbe_endpoints
      PGRST_DB_ANON_ROLE: hafbe_user
      PGRST_DB_POOL: 20
      PGRST_DB_POOL_ACQUISITION_TIMEOUT: 10
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3000
      PGRST_DB_EXTRA_SEARCH_PATH: btracker_app, reptracker_app
    networks:
      haf-network:
    depends_on:
      haf:
        condition: service_healthy
      backend-block-processing:
        condition: service_healthy
  swagger:
    image: ${SWAGGER_REGISTRY:-swaggerapi/swagger-ui}:${SWAGGER_VERSION:-latest}
    ports:
      - "8080:8080"
    profiles:
      - swagger
    environment:
      API_URL: http://localhost:3000/
    healthcheck:
      test: ["CMD-SHELL","curl -f localhost:8080"]
    depends_on:
      backend-postgrest:
        condition: service_started
  pghero:
    image: ${PGHERO_REGISTRY:-ankane/pghero}:${PGHERO_VERSION:-latest}
    ports:
      - "2080:8080"
    profiles:
      - db-tools
    environment:
      DATABASE_URL: postgresql://pghero@haf:5432/haf_block_log
      PGHERO_USERNAME:
      PGHERO_PASSWORD:
    networks:
      haf-network:
    healthcheck:
      test: ["CMD-SHELL","wget --no-verbose --tries=1 --spider --spider http://$PGHERO_USERNAME:$PGHERO_PASSWORD@localhost:8080/ || exit 1"]
    depends_on:
      haf:
        condition: service_healthy
  pgadmin:
    image: ${PGADMIN_REGISTRY:-dpage/pgadmin4}:${PGADMIN_VERSION:-latest}
    ports:
      - "1080:80"
    profiles:
      - db-tools
    environment:
      PGADMIN_DEFAULT_EMAIL:
      PGADMIN_DEFAULT_PASSWORD:
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin4/servers.json:/pgadmin4/servers.json:ro
    networks:
      haf-network:
    healthcheck:
      test: ["CMD-SHELL","wget --no-verbose --tries=1 --spider --spider http://localhost/ || exit 1"]
    depends_on:
      haf:
        condition: service_healthy

networks:
  haf-network:
    name: haf-network

volumes:
  haf_datadir:
    driver: local
  haf_shmdir:
    driver: local
  pgadmin_data:
    driver: local